#!/system/bin/sh
# Fix permission issues with OpenGApps and CM13/AOSP ROMs (issue #200 @github)
#
# Will check if permission is previously granted by the system before blanket granting
#
# Also will only run on first boot
#set -x

required_perms=(android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION)

# Only run this on first boot(not overriding user disabled permissions)
first_boot=false

function contains()
{
    local e
    shift 1
    for e in "${@}"; do [[ "$e" == "$1" ]] && return 0; done
    return -1
}

function indexOf()
{
    local e
    shift 1
    local_array=(${@})
    for e in "${!local_array[@]}"; do [[ "${local_array[$e]}" == "$1" ]] && return $e; done
    return -1
}

function checkFirstBoot()
{
    [[ ! -f /data/local/.gms_perms_fixed ]] && return 0 || return 1
}

function remove()
{
    local arrayname=${1:?Arrayname required} num=${2:-1}
    local array
    [[ $num -lt 0 ]] && num=0 #? Or should this return an error???
    unset $arrayname[$num]
    ## Copy array back to $arrayname
    eval "$arrayname=( \"\${$arrayname[@]}\" )"
}

function setGrantComplete()
{
    touch /data/local/.gms_perms_fixed
}

# Check if this is our first pass at correcting GMS location permissions
checkFirstBoot

if [ $? == 0 ]; then
    # Build array of perms gms has currently (only ones users can see, trimming off the : delimeter)
    gms_perms=($(pm list permissions -u com.google.android.gms | cut -d ':' -f2))

    # Check if gms already is granted the perms required, removing it from the list
    # of required permissions if it already is granted.
    for perm in "${required_perms[@]}"
    do
        contains $perm "${gms_perms[@]}"
        if [ $? == 0 ]; then
            indexOf "$perm" "${required_perms[@]}"
            index=$?
            if [ ! -z $index ] && [ $index != -1 ]; then
                remove "required_perms" $index
            fi
        fi
    done

    if [ "${#required_perms[@]}" == 0 ]; then
        # No further modification needed
        setGrantComplete
        return 0
    fi

    for perm in "${required_perms[@]}"
    do
        pm grant com.google.android.gms ${perm}
    done

    setGrantComplete
    return 0
fi
